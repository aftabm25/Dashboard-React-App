{"version":3,"sources":["Components/Layout/signedinlinks.js","store/action/authActions.js","Components/Layout/signedoutlinks.js","Components/Layout/navbar.js","Components/Dashboard/notifs.js","Components/Projects/projectsummary.js","Components/Projects/projectlist.js","Components/Dashboard/dashboard.js","Components/Projects/projectdetails.js","Components/Auth/signin.js","Components/Auth/signup.js","Components/Projects/createproject.js","store/action/projectActions.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/firebaseconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","uid","Notifs","notifs","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authFirstName","authLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","notifications","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","event","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","authId","Date","error","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bdb25b4.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/action/authActions'\r\n const SignedInLinks = (props) => {\r\n    \r\n    return(\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/CreateProject' className='links'>New Post</NavLink></li>\r\n           <li><a className='links' onClick={props.signOut}>Log Out</a></li>\r\n           <li><NavLink to='/' className=\"btn btn-floating blue-grey darken-4 initials\">{props.profile.initials}</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n            signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  };\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }; \r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nconst SignedOutLinks = () => {\r\n    return(\r\n       <ul className=\"right\">\r\n           <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n           <li><NavLink to='/signin'>Log In</NavLink></li>\r\n           \r\n       </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './signedinlinks'\r\nimport SignedOutLinks from './signedoutlinks'\r\nimport {connect} from 'react-redux'\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props;\r\n    return(\r\n        <nav className=\"nav-wrapper\">\r\n            <div className=\"container\">\r\n              <Link to='/' className=\"logo\">.Dashboard</Link>\r\n              {auth.uid ? \r\n              <SignedInLinks profile={profile}/>\r\n              :\r\n              <SignedOutLinks/>}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps =(state) => {\r\n    console.log(state);\r\n    return{\r\n        auth : state.firebase.auth ,\r\n        profile :state.firebase.profile\r\n        }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifs = (props) => {\r\n    const{notifs} =props;\r\n    return(\r\n      <div className=\"section\">\r\n          <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                  <span className=\"card-title\">Notifications</span>\r\n                  <ul className=\"notifications\">\r\n                      {notifs && notifs.map(item => {\r\n                          return(\r\n                              <li key={item.id}>\r\n                                  <span className=\"name\">{item.user}  </span>\r\n                                  <span></span>\r\n                                  <span>{item.content}</span>\r\n                                  <div className=\"grey-text note-date\">\r\n                                      { moment(item.time.toDate()).fromNow()}\r\n                                  </div>\r\n                              </li>\r\n                          )\r\n                      })}\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n} \r\nexport default Notifs","import React from 'react'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n    <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by <div className=\"name\"> {project.authFirstName} {project.authLastName}</div></p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div> \r\n            </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './projectsummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return(\r\n                        <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                        </Link>\r\n                     )\r\n                }\r\n                )\r\n            }\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport Notifs from './notifs'\r\nimport ProjectList from '../Projects/projectlist'\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Dashboard extends Component {  \r\n    render(){\r\n        //console.log(this.props)\r\n        const {projects, auth, notifs}=this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        \r\n       return(\r\n           <div className=\"dashboard container\">\r\n               <div className=\"row\">\r\n                   <div className=\"col s12 m6\"><ProjectList projects={projects}/></div>\r\n                   <div className=\"col s12 m5 offset-m1\"><Notifs notifs ={notifs}/></div>\r\n               </div>\r\n           </div>\r\n       )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        projects:  state.firestore.ordered.projects, \r\n        auth: state.firebase.auth,\r\n        notifs: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection :'projects', orderBy:['createdAt', 'desc']},\r\n        {collection:'notifications' , limit:3, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n        if(!auth.uid) return <Redirect to ='/signin' />\r\n    if(project){\r\n        return(\r\n\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> {project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by <div className=\"name\">{project.authFirstName} {project.authLastName}</div></div>\r\n                    <div><p>{moment(project.createdAt.toDate()).calendar()}</p></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id= ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects? projects[id] : null\r\n    return {\r\n             project:project,\r\n             auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\nfirestoreConnect([\r\n    {collection:'projects'}\r\n]))(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/action/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password :''\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to ='/' />\r\n    \r\n        return (\r\n            <div className=\"container width=50%\">\r\n                <form onSubmit={this.handleSubmit} className=\"#1A1A1D\" >\r\n                    <h5 className=\"headers\">Sign In</h5>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" className=\"white-text\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className=\"white-text\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink darken-4\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                        {authError? <p> {authError} </p> : null } </div>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError : state.auth.authError, \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/action/authActions'\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password :'',\r\n        firstName :'',\r\n        lastName :''\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to ='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"#1A1A1D\">\r\n                    <h5 className=\"headers\">Sign Up</h5>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" className='white-text' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" className='white-text' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" className='white-text' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className='white-text' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink darken-4\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                     {\r\n                        authError? <p>{authError}</p> : null \r\n                        }\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { createProject} from '../../store/action/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to ='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"headers\">Create New Project</h5>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" className='black-text' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\"> Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink darken-4\">Submit</button>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject : (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project ,\r\n            authFirstName : profile.firstName,\r\n            authLastName : profile.lastName,\r\n            authId : authorId,\r\n            createdAt : new Date()\r\n        }).then(() => {\r\n        dispatch({ type:'CREATE_PROJECT', project :project});   \r\n    }\r\n        ).catch((error) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', error})\r\n        }\r\n        )\r\n}\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './Components/Layout/navbar'\nimport Dashboard from './Components/Dashboard/dashboard'\nimport ProjectDetails from './Components/Projects/projectdetails'\nimport SignIn from './Components/Auth/signin'\nimport SignUp from './Components/Auth/signup'\nimport CreateProject from './Components/Projects/createproject'\n\nclass App extends Component {\n  render() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n       <Navbar/>\n       <Switch>\n         <Route exact path='/' component={Dashboard} />\n         <Route path='/project/:id' component={ProjectDetails}/>\n         <Route path='/signin' component={SignIn}/>\n         <Route path='/signup' component={SignUp}/>\n         <Route path='/createproject' component={CreateProject}/>\n       </Switch>\n    </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n      authError: null\r\n    }\r\n    \r\n    const authReducer = (state = initState, action) => {\r\n      switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n          console.log('login error');\r\n          return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n          }\r\n      \r\n        case 'LOGIN_SUCCESS':\r\n          console.log('login success');\r\n          return {\r\n            ...state,\r\n            authError: null\r\n          }\r\n          \r\n          case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n              ...state,\r\n              authError: null\r\n            }\r\n      case 'SIGNUP_ERROR':\r\n          console.log('signup error')\r\n          return {\r\n            ...state,\r\n            authError: action.err.message\r\n          }\r\n    \r\n        case 'SIGNOUT_SUCCESS':\r\n          console.log('signout success');\r\n          \r\n          return state;\r\n\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n    \r\n    export default authReducer;","const initState={\r\n\r\n      projects: [\r\n            {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n            {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n            {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n      switch(action.type) {\r\n            case 'CREATE_PROJECT':\r\n                  console.log('created project',action.project)\r\n                  return state;\r\n            case 'CREATE_PROJECT_ERROR':\r\n                  console.log('create project error', action.error)\r\n                  return state;\r\n            default:\r\n                  return state\r\n      }\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer= combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore : firestoreReducer,\r\n    firebase : firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCXdAms-eKqGf9JNgcSkziVPTOZBHsB3F8\",\r\n    authDomain: \"aftab-planner-app.firebaseapp.com\",\r\n    databaseURL: \"https://aftab-planner-app.firebaseio.com\",\r\n    projectId: \"aftab-planner-app\",\r\n    storageBucket: \"aftab-planner-app.appspot.com\",\r\n    messagingSenderId: \"379058628857\",\r\n    appId: \"1:379058628857:web:c2e539d23b1066ee889a28\",\r\n    measurementId: \"G-NMGTCF6TM3\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  firebase.firestore().settings( {timestampsInSnapshots : true})\r\n  export default firebase\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseconfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, firebaseConfig)\n  )\n);\nconst profileSpecificProps = {\nuserProfile:'users',\nuseFirestoreForProfile: true,\nenableRedirectHandling: false,\nresetBeforeLogin: false\n}\nconst rrfProps = {\nfirebase,\nconfig: firebaseConfig,\nconfig: profileSpecificProps,\ndispatch: store.dispatch,\ncreateFirestoreInstance\n};\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"center\"></div>;\n   return children\n}\nReactDOM.render(\n<Provider store={store}>\n<ReactReduxFirebaseProvider {...rrfProps}>\n  <AuthIsLoaded>\n      <App />\n  </AuthIsLoaded>\n</ReactReduxFirebaseProvider>\n</Provider>,\ndocument.getElementById(\"root\")\n);\nserviceWorker.unregister();"],"sourceRoot":""}